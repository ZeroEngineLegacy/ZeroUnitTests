class Integer4Tester : ZilchComponent
{
  [Dependency] var BaseRecorder : BaseCogResultRecorder;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.RecordInitialization, this.OnRecordInitialization);
  }
  
  function TestStaticFunctions(stream : UnitTestStreamWriter)
  {
    stream.WriteLine("StaticFunctions");
    stream.BeginScope();
    
    stream.WriteLine(@Integer4.Count);
    stream.WriteLine("Axis(0): `Integer4.GetAxis(0)`");
    stream.WriteLine("Axis(1): `Integer4.GetAxis(1)`");
    stream.WriteLine("Axis(2): `Integer4.GetAxis(2)`");
    stream.WriteLine("Axis(3): `Integer4.GetAxis(3)`");
    stream.WriteLine(@Integer4.NegativeMin);
    stream.WriteLine(@Integer4.NegativeValueClosestToZero);
    stream.WriteLine(@Integer4.PositiveMax);
    stream.WriteLine(@Integer4.PositiveValueClosestToZero);
    stream.WriteLine(@Integer4.XAxis);
    stream.WriteLine(@Integer4.YAxis);
    stream.WriteLine(@Integer4.ZAxis);
    stream.WriteLine(@Integer4.WAxis);
    stream.WriteLine(@Integer4.Zero);
    
    stream.EndScope();
  }
  
  function TestMemberFunctions(stream : UnitTestStreamWriter, data : Integer4)
  {
    stream.WriteLine("MemberFunctions");
    stream.BeginScope();
    
    stream.WriteLine("Constructor: `Integer4()`");
    stream.WriteLine("Constructor: `Integer4(1)`");
    stream.WriteLine("Constructor: `Integer4(1, 2, 3, 4)`");
    stream.WriteLine("Constructor: `Integer4(Integer2(1, 2), 3, 4)`");
    stream.WriteLine("Constructor: `Integer4(1, Integer2(2, 3), 4)`");
    stream.WriteLine("Constructor: `Integer4(1, 2, Integer2(3, 4))`");
    stream.WriteLine("Constructor: `Integer4(Integer2(1, 2), Integer2(3, 4))`");
    stream.WriteLine("Constructor: `Integer4(Integer3(1, 2, 3), 4)`");
    stream.WriteLine("Constructor: `Integer4(1, Integer3(2, 3, 4))`");
    stream.WriteLine("ToDo: Constructor Integer4(Integer4))");
    //stream.WriteLine("Constructor: `Integer4(data)`");
    
    stream.WriteLine(@data.Count);
    
    stream.WriteLine("operator[].Get: `data[0]` `data[1]` `data[2]` `data[3]`");
    data[0] = 18;
    data[1] = -65;
    data[2] = 41;
    data[3] = 0;
    stream.WriteLine("operator[].Set: `data`");
    
    stream.EndScope();
  }
  
  function OnRecordInitialization(event : CogFrameRecordEvent)
  {
    var stream = event.Stream;
    stream.WriteLine("Integer4 tests:");
    stream.BeginScope();
    
    this.TestStaticFunctions(stream);
    this.TestMemberFunctions(stream, Integer4(4, -49, 0, 1));
  }
}
